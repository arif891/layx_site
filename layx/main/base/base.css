*,*::before,*::after {
    box-sizing: border-box;
}

:root {
    interpolate-size: allow-keywords;
}

@media (prefers-reduced-motion: no-preference) {
    :root {
        scroll-behavior: smooth;
    }
}

body {
    margin: 0;
    min-height: 100dvh;
    color: var(--color);
    background-color: var(--bg-color);
    font-family: var(--font-family, sans-serif);
    font-size: var(--font-size);
    font-weight: var(--font-weight);
    line-height: var(--line-height);
    accent-color: var(--accent-color);
    -webkit-text-size-adjust: 100%;
    -webkit-tap-highlight-color: transparent;
}

img, picture, video, canvas, svg {
    display: block;
    max-width: 100%;
}

svg {
 vertical-align: middle;
}

iframe {
    border: 0;
}

hr {
    margin-block: 1rem;
    color: inherit;
    border-width: 1px 0 0;
    border-style: solid;
    opacity: .25;
}

ol,ul {
    padding-inline-start: 2rem;

    li {
        padding-block: .25rem;
    }
}

ol,ul,dl {
    margin-block: 0 1rem;
}

:is(ol, ul) :is(ol, ul) {
    margin-block: unset;
}

table {
    th, td {
      text-align: left;
      padding-block: .25rem;

      &:not(:first-child, :last-child) {
        padding-inline: .75rem;
      }
    }
}

pre,code,kbd,samp {
    font-size: min(calc(.8rem + .15vw), 1rem);
}

pre {
  margin-block: unset;
}

code {
  color: var(--code-color, #d63384);
}

kbd { 
  width: fit-content;  
  padding: 0.1875rem 0.375rem;
  color: var(--kbd-color, var(--bg-color));
  background-color: var(--kbd-bg-color, var(--color));
  border-radius: 0.25rem;
}

small {
    font-size: min(calc(.8rem + .1vw), 1rem);
    font-weight: 475;
}

a {
    text-decoration: none;
    color: var(--link-color);
    transition: .3s;

    &:not(:has(*)) {
        &:hover {
            opacity: .8;
            text-decoration: underline;
        }
    }
}

backdrop {
    --backdrop-bg: rgba(var(--color-rgb),.3);
    position: fixed;
    inset: 0;
    visibility: hidden;
    opacity: 0;
    z-index: 2;
    background: var(--backdrop-bg, rgba(0,0,0,.3));
    transition: var(--backdrop-transition, .3s);
    backdrop-filter: blur(var(--blur));

    &[open] {
        visibility: visible;
        opacity: 1;
    }
}